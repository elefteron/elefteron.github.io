<!doctype html>
<html>
<head> <title>SVC-8f</title>
  <meta charset="utf-8">
  <!-- encoding charset="utf-8" | "ansii"=="windows-1251" 
      BG: ах, чудна българска земьо, полюшвай цъфтящи жита!
      EN: the quick brown fox jumps over the lazy dog!
  -->
  <script> // (GNU GPL)
       /*    
       @licstart  The following is the entire license notice for the 
       JavaScript code in this page.

       Copyright (C) 2014  Loic J. Duros

       The JavaScript code in this page is free software: you can
       redistribute it and/or modify it under the terms of the GNU
       General Public License (GNU GPL) as published by the Free Software
       Foundation, either version 3 of the License, or (at your option)
       any later version.  The code is distributed WITHOUT ANY WARRANTY;
       without even the implied warranty of MERCHANTABILITY or FITNESS
       FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

       As additional permission under GNU GPL version 3 section 7, you
       may distribute non-source (e.g., minimized or compacted) forms of
       that code without the copy of the GNU GPL normally required by
       section 4, provided you include this license notice and a URL
       through which recipients can access the Corresponding Source.   


       @licend  The above is the entire license notice
       for the JavaScript code in this page.
       */
  </script>  
  <meta http-equiv="x-ua-compatible" content="ie=9">
  
  <link rel='icon' href='svc.ico' type='image/x-icon'/ >  
  
  <meta name="description" content="SVC - Seria Values Collector; *.eps barcodes generated by Zint">
  <meta name="keywords" content="Seria values, sequences, barcodes">
  <meta name="author" content="Elefter Arnaudov"> 
  <meta name="contact" content="mailto:elefter@abv.bg" />  
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <noscript> <pre> <!-- Requires JavaScript -->
    (EN) Requires enable JavaScript for full functionality! See how: <a href="https://www.enable-javascript.com/" target="_blank">"JS enable"</a>
    Specifically this WAP (web application page) needs 
    - HTA (Html application) / browser IE9+ for file i/o
    
    (BG) Изисква разрешен JavaScript за пълна функционалност! Виж как: <a href="https://www.enable-javascript.com/" target="_blank">"JS enable"</a>
    Специално тази WAP (web application page) изисква 
    - HTA (Html application) / браузър IE9+ за файлов вх/изх.
    </pre> 
  </noscript>
 
  <script> // load_new(module),load_end(),load_lst(),msg(s),sysinfo(),id_def_no(idname),vizIDs(a,ids),dict()
    _activexON = !true || (     (navigator.userAgent.toLowerCase().indexOf('msie')>=0)
                            && !(window.ActiveXObject===undefined)
                            && !(window.ActiveXObject==null) )   
	dbg=true; 
    // usage: if(dbg && !_activexON) console.log()
    eol='\n'; br='<br/>'; 
	modules=[]; mn=-1;  
	function load_new(module){ modules[++mn]={'name':module,'state':'start'} } 
    load_new('svc.htm#hdr scr');
	function load_end(){ modules[mn].state='ok' }
	function load_lst(){ var i,buf='',ok=0;
    // msg(' ... loads expected['+load_exp.length+']='+load_exp) //  [#]. {module:state} 
	   for (i=0; i<=mn; i++) { if(modules[i].state=='ok') ok++;
         buf+='  ['+(i+1)+'].{'+modules[i].name+':'+modules[i].state+'}'+eol+br;
       }
       return(' ... loads todo='+(mn+1)+' loads ok='+ok+eol+br+buf) //  [#]. {module:state} 
	}; 
    // ---
    function msg(s) { 
      if (typeof(s)===undefined) return;
      if (msg_===undefined || msg_===null) {
        try{               document.write('»msg:'+s+eol+br); 
        }catch(Exception){ alert('»»msg:'+s);}
        return
      }
      
      if (s==null) msg_.innerHTML =''; // clear old  content
      else         msg_.innerHTML+=s+eol+br; // append
    
    }; msg_=null;
    // ---
    function sysinfo(){
      msg('... system var: ')
      msg('work:'+workpath)
      msg('root:'+rootpath)
      msg('user:'+user)
      
      msg('pers_init_bat:'+pers_init_bat)
      msg('eps_gen_bat:'+eps_gen_bat)
//    msg('@:'+@)
      msg('... ')
	  vizIDs('i',["gui"  ,"hdr"  ,"_lib","lib"  
	             ,"_ser" ,"ser"   ,"ser3","gen","sav" 
	             ,"_col","col"  ,"_hlp","hlp"  ,"_msg","msg"]);
    } 
    function id_def_no(idname){ var j,id=null;
		for(j=0; j<=_win.length-1; j++) {
		  if (idname==_win[j].id) {  // console.log('vizIDs: _win[',j,'].id:',_win[j].id,' == ',idname);
		    id=j; j=_win.length; break;
		  }
		}
        return id
	}
    function vizIDs(a,ids){ // (act:s/h/t/i,ids['xxx',...])
	   var i,j,idname,id,e,stl,h, act=a, _newH=_minH; // console.log('vizIDs:',act,ids); 
	   // if find sended ids[] in _win[] then save state
	   // set action hide/show/toggle
       for(i=0; i<=ids.length-1; i++){ idname=ids[i]; id=null; 
         if(idname==undefined || idname=='' || idname==null) continue; // skip
		 // console.log('vizIDs:[',i,']',idname)
		 id= id_def_no(idname)
    //  if(id==null)     { msg('... vizIDs:'+act+' id:'+idname+' <e>undefined</e>'); } // no skip
	       e=document.getElementById(idname); 
         if(e==undefined) { msg('... vizIDs:'+act+' id:'+idname+' <e>html miss</e>'); continue} // skip
		    stl=e.style.display
		    switch (act) { // actions: show/hide/toggle/info
            case 'h':      e.style.display = "none"; 
		              if(id!=null) _win[id].st=_min;  
		    break;
            case 's':      e.style.display = "inline-block"; 
		              if(id!=null) _win[id].st=_max;  
		    break;
            case 't': if (stl=="none") { e.style.display = "inline-block"; 
		                if(id!=null) _win[id].st=_max;
                      } else           {e.style.display = "none";
		                if(id!=null) _win[id].st=_min;
			 		  }
		    break;
            case 'i': info=e.getBoundingClientRect(); 
//                    msg('Info: id='+ids[i]+' h='+r(info.offsetHeight,2)+' w='+r(info.offsetWidth,2) ); // ie8 - undef
                      msg('... vizIDs:i id:'+ids[i]+' <u>h:'+r(info.height,2)      +' w:'+r(info.width,2)+'</u>'); // rnd
		    break;
         // default:  ;
		    }// switch
			
       }// for
     
	    _newH=_minH; // calculate _newH depend of _win[] states
	    for(i=0; i<=_win.length-1; i++){ 
		  if(_win[i].st>0){ _newH+= _win[i].h[_win[i].st] - _win[i].h[_min]; 
	//      msg(_win[i].id+' st:'+_win[i].st+' > '+_minH+' + '+_win[i].h[_win[i].st]+'='+_newH)
		  }
		}
	//  msg('... _newH:'+_newH+' _maxH:'+_maxH) 
		if(_newH>990) _newH=990; 
        window.resizeTo(_minW,_newH);	
    //  window.moveTo(130,35); // x:,y:
	   
    }// func
    function nv(o,n){ // only if(o.name==n) return o.value;
	  if(    (typeof(o)===undefined) || (       o == null     )
	      || (typeof(n)===undefined) || (       n == null     ) ) return null; // skip
	  if(o.name==n) return o.value;
	  return null
	}
    function _dict(sel_lang){ tolang=sel_lang // dict[indx][tolang] 
      var tag="span", atr="lang",l,ai,val
      var indx,i,k=0,haslang; if(typeof(tolang)==undefined || tolang<0 || tolang>1 || tolang==null) return
	  var tl='??'; if(sel_lang==0) tl='bg'; if(sel_lang==1) tl='en';
	  if(dbg) msg('dict[i]['+tl+']:\n')
      var spans=document.getElementsByTagName(tag)
      for(i in spans){ ++k; 
      // ai=0; for(l in spans[i].attributes) ai++; msg('-- span#: '+(k)+' nm: '+i+' a['+ai+'] '+'\n')
         for(l in spans[i].attributes){ indx=nv(spans[i].attributes[l],atr) // -> #|null
            if(indx==null || indx=='') continue; // skip to next atr with name lang='#'
            if(dbg) msg('-- span#: '+(k)+' nm: '+i+' ['+l+']> lang indx: '+indx+' to lang:'+tolang+' \n'
            +dict[indx][tolang]+'\n')
            if(indx>=0 && indx<=99){ if(dbg && !_activexON) console.log(dict[indx][tolang]); 
              spans[i].innerHTML=dict[indx][tolang]
            }; 
         };
        
      }
    }

    load_end();
  </script> 
  
  <script src="svc_barcodes.js" ></script>
  <script src="svc_pers.js"     ></script>
  <script src="svc_global.js"   ></script>
  <script src="svc_gui.js"      ></script>
  <script src="svc_gui_help2.js"></script>
  <script src="svc_fs-csv.js"   ></script>
  <script src="svc_fs.js"       ></script>
  
  <script src="svc_usr.js"      ></script> <!-- content maked by svc-init.cmd -->
  <!-- old desk to root, old pers to jobs, old data to eps, new wrk -->

  <!-- 
~   tr            {  display:block; }
-   table td: first-child{width:50%}
-   table-layout: fixed;
-   collapse; float:none;
  -->
<style> u{color:#ffff99;} e{color:#d90000;} k{color:#4cffff;} b{font-size:14pt;color:#6cd900;}
  body { background-color:#777777; color:#fdfdfd; display: flex;
	font-family: "DejaVu Sans", "Arial"; font-size:12pt; margin:3px 3px 3px 3px;
  }
  body.light-mode { 
      background:#aaaaaa;
  }
  body.dark-mode { /* body class="dark-mode"  */
      background:#4b4b4b;
  }
  * {box-sizing: border-box;}
  table, th, td {  border: 1px solid #444444; background-color:#111111; border-collapse: collapse; }
  
  fieldset { width:1000px;} /* width:800px; */   
  .data    { width:990px;}  /* width:790px; */
  .info    { width:990;}    /* width:790px; */
  
  fieldset { color: #eeeeee; background-color:#111111; display: inline-block; 
             padding: 4px;  margin:1px 1px 1px 1px; border:1px solid #090909; border-radius:6px;}
  .legend  { color: #eeeeee; background-color:#000000; display: inline-block;
             border:1px solid #eeeeee;  cursor:pointer;border-radius:3px;padding:2px;}
  .data    { background-color:#202020;padding:2px; 
	         vertical-align:top; text-align:left; margin:2; border-spacing:2; }
  .info    { background-color:#202020;padding: 2px; font-family: "Arial";
	    vertical-align:top; text-align:left; margin:2; border-spacing:2; border:1px solid #eeeeee; 
        font-size:12pt; word-wrap:break-word; overflow: auto; border-radius:3px; padding:2px;}
  
  .v {color: #d9a300; }
  .e {color: #ffff99; background-color:#000000; border: 1px solid #d9a300; cursor:pointer; padding:1px;}

  .bSer    { background-color:#400000;color:#eeeeee; cursor:pointer; border-radius:3px; padding:2px;}
  .bRun    { background-color:#202020;color:#ffff99; cursor:pointer; border-radius:3px; padding:2px;
             border:1px solid #eeeeee;}
 
  .bRun:hover    { background-color:#333333; color: #d96c00; }
  .bRun:focus    { outline: 1px dashed #d9a300;} 
  
  .bRun:active   { color: #d96c00; }
  .legend:hover  { color: #d96c00;}

/*	button:focus { outline: 4px dashed #d9a300; } 
	button:focus:not(:focus-visible) {
		outline: none;
		box-shadow: 1px 1px 5px rgba(1, 1, 0, .7);
	}
	 
/* */

  .id       { color: #d9a300; font-family:Anastasia; font-size:38pt; line-height:30pt;}
  a:link    { color: #d9a300; background-color: transparent; text-decoration: none;}
  a:visited { color: #d9a300; background-color: transparent; text-decoration: none;}
  a:hover   { color: #ffff99; background-color: transparent; text-decoration: underline;}
  a:active  { color: #d96c00; background-color: transparent; text-decoration: underline;}   
</style>
</head>

<body textsize="3" scrolling="auto" border="0">
<script> load_new('svc.htm#body scr'); </script>
<div ID="gui"><!-- sh_ctr_m:hide all but acceskey [p,s,c,i,m] dont work as alt_key -->
  <!-- за всички <span lang="#"> се подменя съдържанието/текста според dict[#,lang=bg|en]-->
  <fieldset ID='_hdr' style='height:48px'>
    <span ID="hdr"  style='float:left;  margin: 1px 4px 4px 4px;'>SVC.</span> 
    <span ID="hdr_" >
      <span lang="3">компютър.    </span> <font color='gold'><span ID="comp">?</span></font>
      <span lang="4">опер. с-сма. </span> <font color='gold'><span ID="os"  >?</span></font>
<!--  <button onclick="self.close()" style='float:right;' class="bRun" title="close"                  > X затвори </button>&nbsp;  --> 
      <button onClick="reloadPage()" style='float:right;' class="bRun" title="reload=F5" type="submit">
        <span lang="5">презареди</span>
      </button>
      <span style='float:right;'> <!-- crnt select option not showed correctly after reload !? -->
        <span lang="0">език.</span>
        <select id="lang-sel" onchange="_dict(this.value);" style="height:22px;">
          <option value="0" selected="selected">Bg</option>
          <option value="1" >En</option>
        </select>
<!-- --/>        
        <div id="lng">
          <select v-model="currentLocale">
            <option v-for="locale in locales" v-bind:value="locale.id">{{locale.name}}</option>
          </select>
          <p>{{ message[currentLocale] }}</p>
        </div>
<!-- -->        
      </span>
      <button onClick='sysinfo()'    style='float:right;' class="bRun" title="sysinfo"   type="submit">
        <span lang="6">* sysinfo</span>
      </button>
      </br>
      <span lang="1">работен път. </span> 
      <font class='v'><a ID="xpth" title="open work path" onclick="fsh.run(workpath,1);">?</a> </font>&nbsp;
      <span lang="2">потребител. </span> 
      <font color='gold'><span ID="user">?</span></font>
    </span>
  </fieldset><br/>
  <fieldset ID='_lib'> 
	<span class="legend" onclick='vizIDs("t",["lib"]);' title="fold/unfold saved seria par" acceskey="p"
     lang="10">&GT; Зареди готови параметри на серия </span> : 
  	 <span ID='lib' class="info" style='font-size:10pt; 
	 width:980px; height:600px; display:none;'> [# order id bcn pr sc dg fr val to k]
	 </span>
  </fieldset><br/>
  <fieldset ID='_ser'  valign="top"> 
	<span class="legend" onclick='vizIDs("t",["ser3"]);' title="fold/unfold  acceskey="s"
     lang="20">&GT;&nbsp;СЕРИЯ&nbsp;</span>
    <span lang="21"> избрани параметри:</span>
	 <font class='v' style="font-size:11pt;">
	   <span ID="xfil" title="генерирано име за персонализацията" class="bSer">.</span><br/>
	 </font>
	<!-- margin:3px 3px 3px 3px; padding: 2px -->
    <span ID='ser3'  class="info" style='font-size:10pt; width:980px; display:none;'>
  	  <span ID='ser' class="data" style=";width:970px;" align="right"  valign="top">
        <div ID='par' style=" overflow: auto;font-size:11pt; " valign="top">order id bcn val kol row </div>
	  </span>
      <hr width="970" size="2px" color="#777777" align="center" style="margin: 2px 0px 2px 0px;"> 
  	  <span ID='gen'  class="data" style="width:970px;" align="right"  valign="top">
        <font style="font-size:11pt;">
          <span lang="22">а) зареди запазени или задай нови пар-ри, направи серия</span>
        </font>
	    <font style="font-size:11pt;">
          <span lang="23">б) прочети направена серия, задай пар-ри</span>
        </font>
        <table style="border: 0px solid #444444;" valign="top"><tr><td>
          <span ID='xpar' style=" font-size:11pt; ">pr sc dg fr val to </span>
          <button onclick="make_seria();" class="bRun" title="make seria data \ генерирай стойностите на серия">
          <span lang="24">направи серия</span>
          </button> 
	    </td><td>
          <input type="file" onchange="csv_imp=this.value;" value="?" class="e" style='width:350px;' title="избор на .csv файл" multiple /><br/>
	  	
          <!-- The multiple attribute lets users select multiple files. -->
	  	<!--  --/>
          <input type="file" id="file-selector" multiple>
          <script>
            const fileSelector = document.getElementById('file-selector');
            fileSelector.addEventListener('change', (event) => {
              const fileList = event.target.files;
              console.log(fileList);
            });
          </script>
	  	<!--  -->
          hdr:<input type="checkbox"   ID='has_hdr' value='-' onchange="par[p].has_hdr=this.value;" title="има ли заглавен ред (header) във файла" class="e">
          <br/><button onclick="get_csv('',csv_imp,par[p].has_hdr); new_par();" class="bRun"  title="импортиране на файл">
            <span lang="30">прочети серия</span>
          </button>
        </td></tr>
        </table>
      </span>
      <hr width="970" size="2px" color="#777777" align="center" style="margin: 2px 0px 2px 0px;"> 
  	  <span ID='sav'  class="data" style="width:970px;" align="right"  valign="top">
        <font style="font-size:11pt;">
          <span lang="61">в) запиши направената серия като .csv таблици и направи .eps баркодове за серията:</span>
        </font></br>
        <button onclick="putCSVzint();"   class="bRun" title="save data for Zint"         >
          <span lang="62">запиши за Zint</span>
        </button>&nbsp;
        <button onclick="putCSVindd();"   class="bRun" title="save data for Indesign"     >
          <span lang="63">задай Kолони и запиши за Indesign</span>
        </button>&nbsp;
        <button onclick="run_make_eps();" class="bRun" title="call Zint то make barcodes" >
          <span lang="64">направи .eps</span>
        </button>&nbsp;
        <button onclick="repl_eps();"     class="bRun" title="refine barcodes clr,fnt"    >
          <span lang="65">прецизирай .eps</span>
        </button>
      </span>
	</span>
  </fieldset><br/>
  <fieldset ID='_col'>
	<span class="legend"  onclick='vizIDs("t",["col"])' title="fold/unfold" acceskey="c">
      <span lang="71">&GT; КОЛЕКЦИЯ </span>
    </span>
    &nbsp; [ <span ID="Col_val" class="bSer">.</span>] &nbsp;
    <span ID='col' style='' >
	  <button onclick="apnd();" class="bRun" title="append seria to collection" >
      <span lang="72">&GT;&GT; добави серия към колекция</span>
      </button>
      K:<input type="number"   ID='Col_k' class='e' size="1"  value='0' onchange="par[p].k =this.value; new_par();">
      R:<input type="number"   ID='Col_r'           size="4"  value='0' >
     <button onclick="putCSVindd();" class="bRun" title="save data for Indesign">
     <span lang="73">запиши за Indesign</span>
     </button>&nbsp;
    </span>
  </fieldset><br/>
  <fieldset ID='_hlp' >
    <span class="legend"  title="fold/unfold" onclick='vizIDs("t",["hlp"])' acceskey="i">
      <span lang="81">&GT; Помощ </span> 
    </span>&nbsp;  
    
    <a href='#0' class="bRun" title="scope">     <span lang="82">Обзор и технологии</span> </a>
    <a href='#1' class="bRun" title="SVC">       <span lang="83">1.Процес</span> </a>
    <a href='#2' class="bRun" title="csv gen">   <span lang="84">2.Серия</span>  </a>           
    <a href='#3' class="bRun" title="data merge"><span lang="85">3.Сглобяване</span> </a> 
    <a href='#4' class="bRun" title="data flow"> <span lang="86">4.Техн. инфо</span>  </a> 
    
	<div ID="hlp" class="info" style="height:650px; display:none">.</div> 
  </fieldset><br/>
  <fieldset ID='_msg'>
    <span class="legend"  title="fold/unfold" onclick='vizIDs("t",["msg"])' acceskey="m">
      <span lang="98">&GT; съобщения </span>
      </span>&nbsp; 
	  <button onClick="msg_.innerHTML=''" class="bRun" type="submit" title="clear msg / изчисти съобщенията">
        <span lang="99">изчисти</span>
      </button>
	<div ID="msg" class="info" style="height:650px; width:990px; display:none">.</div> 
<!-- --*> 
    <div class="container">Dark/Light Mode
	  <button 
      	class="light-mode-button" aria-label="Toggle Light Mode" onclick="toggle_light_mode()">
	      <span></span> <span></span>
	  </button> 
    </div>
<!-- --> 
  </fieldset><br/>
</div> 
<script> load_end(); </script>
<script> load_new('svc.htm#script2');
{  dict=[]; bg=0; en=1; tolang=bg; // [0='bg',1='en']
   dict[  0]=['език:'         ,'lang:'     ] 
   dict[  1]=['работен път:'  ,'work path:']
   dict[  2]=['потребител:'   ,'user:'     ]
   dict[  3]=['компютър:'     ,'computer:' ]
   dict[  4]=['опер. с-сма:'  ,'oper.system:']
   dict[  5]=['* презареди'   ,'* reload'  ]
   dict[  6]=['* сист.инф-я()','* sysinfo()']
   
   dict[ 10]=['&GT; Зареди запазени параметри на серия '
             ,'&GT; Load saved seria params ']
             
   dict[ 20]=['&GT; СЕРИЯ&nbsp;','&GT; SERIA ']
   dict[ 21]=['избрани параметри:','selected parameters:']
   dict[ 22]=['а) зареди запазени пар-ри или задай нови, направи серия'
             ,'a) load saved par`s or set new, make seria']
   dict[ 23]=['б) зареди направена серия от .csv, задай пар-ри'
             ,'b) load saved seria from .csv, set new par`s']
   dict[ 24]=['направи серия','make seria']
   
   dict[ 30]=['прочети серия','load seria']
   
   dict[ 61]=['в) запиши направената серия таблици (като .csv) и направи баркодове за серията (като .eps):'
             ,'c) save maked seria tables (as .csv) and make barcodes for seria (as .eps)']
   dict[ 62]=['запиши .csv за Zint'  ,'save .csv for Zint']
   dict[ 63]=['задай Kолони и запиши .csv за Indesign','set Kolumns and write .csv for Indesign']
   dict[ 64]=['направи .eps със Zint','make .eps with Zint']
   dict[ 65]=['прецизирай .eps'      ,'tune-up .eps'] // fnt,clr,bw - ask!?
   
   dict[ 71]=['&GT; КОЛЕКЦИЯ ','&GT; COLECTION']
   dict[ 72]=['&GT;&GT; добави серия към колекция','&GT;&GT; append seria to collection']
   dict[ 73]=['запиши .csv за Indesign','save .csv for Indesign']
   
   dict[ 81]=['&GT; Помощ '  ,'&GT; Help ']
   dict[ 82]=['Обзор'      ,'Scope'] // Обзор и цели, Конфигурация
   dict[ 83]=['Процеси'    ,'Processes']
   dict[ 84]=['Серия'      ,'Seria'] // параметри,баркодове,symbology
   dict[ 85]=['Сглобяване' ,'assembly'] // персонализация, data merge 
   dict[ 86]=['Техно инфо' ,'tech-info'] // ['6.поток данни','6.Data flow and tech']
   
   dict[ 98]=['&GT; Съобщения','&GT; Messages']
   dict[ 99]=['изчисти','clear']
// dict[  #]=['','']
}// ---

// #pers-init.bat must be runed before htm on XP 
// if(isFunc(typeof(window.ActiveXObject))) run_pers_init() // pers_init_bat=
// todo: info-> outhlp(help_tech,tolang)
   
{  msg_=document.getElementById("msg");
   if (msg===undefined || msg===null) {
      document.write('<div ID="msg" class="info" style="height:400px; display:none">»» msg  </div>')
      msg_=document.getElementById("msg"); alert(' msg_ forced!')
   }
   var ok=0; for (var i=0; i<=mn; i++) { if(modules[i].state=='ok') ok++;}
   if((mn+1)<10 || ok<9) msg('*** some scripts not loaded ***');
   else msg('*** all scripts loaded ok ***')
   
   gui_init();
   set_paths()
   fs_init(); // if(ActiveX!=null) user=fsn.UserName;	  
   
   xusr_.innerHTML=user   
   xpth_.innerHTML=workpath; // alert(wp)
    xos_.innerHTML=os   
   xcmp_.innerHTML=comp   
   set_val("xpth"     , 'htm', workpath     ) 

   {_min=0, _mid=1, _max=2 // _win.hdr.st=_min; h=_win.hdr.h[_min] 
     _win=[ // id,st:0/1/2, h[st]
	       {id:'hdr' ,st:0, h:[  43,  0, 43]}  // 
          ,{id:'lib' ,st:0, h:[  35,  0,600+35]}  // par_lib def 350 result +33
		  
          ,{id:'ser3',st:0, h:[  35,  0,267]}  // -- seria -- 267 
      //  ,{id:'ser' ,st:0, h:[   0,  0, 88]}  // -- seria -- par tbl ?
      //  ,{id:'gen' ,st:0, h:[   0,  0,120]}  // -- seria -- make/get
      //  ,{id:'sav' ,st:0, h:[   0,  0, 42]}  // -- seria -- save
			                         
          ,{id:'col' ,st:0, h:[  35,  0, 35]}  //  collection
          ,{id:'hlp' ,st:0, h:[  35,  0,650+35]}  //  350
          ,{id:'msg' ,st:0, h:[  35,  0,650+35]}] //  400         

	  _minW=840; _minW=1040; _minH=0; _maxH=0; // _minH:218 _maxH:1586 
	  for(var i=0; i<=_win.length-1; i++) {_minH+=_win[i].h[_min]; _maxH+=Number(_win[i].h[_max]); }
	}

	msg('... _minH:'+_minH+' _maxH:'+_maxH) 
	_minH+=60; if(_maxH>900) _maxH=900; 
//  window.resizeTo(_minW,_minH);/* w:840,h:260..1000 */ //  window.moveTo(62,20); /* x:130,y:70 */
//  console.table(_win)
//  console.log(_win)

    vizIDs('h',["lib" ,"ser3","col","col","hlp","msg"]) 
    
    _dict(tolang) // replace html for each <span data-lang="#">...</span> with dict[#][lang]
    // outhlp()
    load_end();

    msg(load_lst());
    if(dbg) msg('dbg:'+dbg+' _activexON:'+_activexON) 
//  window.onload = msg(load_lst()); 
//  window.onload = (event) => {
//    console.log('page is fully loaded'); onload.load_lst();
//  };
}
</script>
</body>  
</html>